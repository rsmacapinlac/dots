#!/bin/sh
#
# Attach or create tmux session.

path_name="$(basename "$PWD" | tr . -)"
if [ "$PWD" = "$HOME" ]; then
  session_name=${1-"home"}
else
  session_name=${1-$path_name}
fi

not_in_tmux() {
  [ -z "$TMUX" ]
}

session_exists() {
  tmux has-session -t "=$session_name" 2>/dev/null
}

create_detached_session() {
  (TMUX='' tmux new-session -Ad -s "$session_name" -c "$PWD")
}

create_dev_session() {
  if not_in_tmux; then
    tmux new-session -d -s "$session_name" -c "$PWD"
    tmux send-keys -t "$session_name:0" 'nvim' Enter
    tmux split-window -h -t "$session_name:0" -c "$PWD"
    tmux send-keys -t "$session_name:0.1" 'claude' Enter
    tmux select-pane -t "$session_name:0.0"
    tmux attach-session -t "$session_name"
  else
    if session_exists; then
      tmux switch-client -t "=$session_name"
    else
      (TMUX='' tmux new-session -d -s "$session_name" -c "$PWD")
      tmux send-keys -t "$session_name:0" 'nvim' Enter
      tmux split-window -h -t "$session_name:0" -c "$PWD"
      tmux send-keys -t "$session_name:0.1" 'claude' Enter
      tmux select-pane -t "$session_name:0.0"
      tmux switch-client -t "=$session_name"
    fi
  fi
}

create_if_needed_and_attach() {
  if not_in_tmux; then
    tmux new-session -As "$session_name" -c "$PWD"
  else
    if session_exists; then
      tmux switch-client -t "=$session_name"
    else
      create_detached_session
      tmux switch-client -t "=$session_name"
    fi
  fi
}

if [ $# -gt 0 ]; then
  # Argument provided
  if session_exists; then
    # Session exists, just use it
    if not_in_tmux; then
      tmux attach-session -t "$session_name"
    else
      tmux switch-client -t "=$session_name"
    fi
  else
    # No session exists, use function for argument
    case "$1" in
      "dev")
        create_dev_session
        ;;
      *)
        # Default behavior for other arguments
        create_if_needed_and_attach
        ;;
    esac
  fi
else
  # No argument provided
  create_if_needed_and_attach
fi
