#!/bin/bash

# neomutt-accounts - Start neomutt with different local maildir account configurations
# Usage: neomutt-accounts [account-name]
# Available accounts: macapinlac, gmail, boogienet

set -e

# Configuration directory
CONFIG_DIR="$HOME/.config/neomutt"
ACCOUNTS_DIR="$CONFIG_DIR/accounts"

# Default account if none specified
DEFAULT_ACCOUNT="macapinlac"

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# Function to show usage
show_usage() {
    echo "Usage: $0 [account-name]"
    echo ""
    echo "Available local maildir accounts:"
    echo "  macapinlac  - Macapinlac local maildir"
    echo "  gmail       - Gmail local maildir"
    echo "  boogienet   - Boogienet local maildir"
    echo ""
    echo "If no account is specified, defaults to: $DEFAULT_ACCOUNT"
    echo ""
    echo "Examples:"
    echo "  $0                # Start with default account"
    echo "  $0 gmail          # Start with Gmail local maildir"
    echo "  $0 macapinlac     # Start with Macapinlac local maildir"
}

# Function to validate account exists
validate_account() {
    local account="$1"
    local account_file="$ACCOUNTS_DIR/$account"
    
    if [[ ! -f "$account_file" ]]; then
        echo "Error: Account configuration '$account' not found at $account_file" >&2
        echo "Available accounts:" >&2
        ls -1 "$ACCOUNTS_DIR" | sed 's/^/  /' >&2
        exit 1
    fi
}

# Function to start neomutt with specific account
start_neomutt() {
    local account="$1"
    local account_file="$ACCOUNTS_DIR/$account"
    
    echo "Starting neomutt with local account: $account"
    echo "Configuration: $account_file"
    echo ""
    
    # Start neomutt with the specified account configuration
    neomutt -F "$CONFIG_DIR/neomuttrc" -e "source $account_file"
}

# Main script logic
main() {
    local account=""
    
    # Parse command line arguments
    while [[ $# -gt 0 ]]; do
        case $1 in
            -h|--help|help)
                show_usage
                exit 0
                ;;
            -* )
                echo "Error: Unknown option $1" >&2
                show_usage
                exit 1
                ;;
            * )
                if [[ -z "$account" ]]; then
                    account="$1"
                else
                    echo "Error: Multiple accounts specified" >&2
                    show_usage
                    exit 1
                fi
                shift
                ;;
        esac
    done
    
    # Use default account if none specified
    if [[ -z "$account" ]]; then
        account="$DEFAULT_ACCOUNT"
    fi
    
    # Check if neomutt is installed
    if ! command -v neomutt >/dev/null 2>&1; then
        echo "Error: neomutt is not installed or not in PATH" >&2
        exit 1
    fi
    
    # Check if config directory exists
    if [[ ! -d "$CONFIG_DIR" ]]; then
        echo "Error: Neomutt config directory not found: $CONFIG_DIR" >&2
        exit 1
    fi
    
    # Check if accounts directory exists
    if [[ ! -d "$ACCOUNTS_DIR" ]]; then
        echo "Error: Accounts directory not found: $ACCOUNTS_DIR" >&2
        exit 1
    fi
    
    # Validate the account exists
    validate_account "$account"
    
    # Start neomutt with the specified account
    start_neomutt "$account"
}

# Run main function with all arguments
main "$@" 